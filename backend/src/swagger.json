{
  "swagger": "2.0",
  "info": {
    "title": "Swagger of Alexander Tewes, Mario Hönighausen, Jan Frericks",
    "version": "1.0"
  },
  "produces": ["application/json"],
  "host": "localhost:8080",
  "basePath": "/api",
  "tags": [
    {
      "name": "Salesman",
      "description": "CRUD implementation for salesman with additional functionalities"
    },
    {
      "name": "Performance Record",
      "description": "CRUD implementation for performance records"
    },
    {
      "name": "Bonus Computation",
      "description": "Create implementation for bonusComputation"
    },
    {
      "name": "Salesorder",
      "description": "CR implemenation für salesorder"
    },
    {
      "name": "User",
      "description": "Current user session status"
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/salesman": {
      "post": {
        "tags": [
          "Salesman"
        ],
        "summary": "Create one salesman",
        "operationId": "createSalesman",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Salesman object thats need to be added",
            "schema": {
              "$ref": "#/definitions/Salesman"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful"
          },
          "401": {
            "description": "unauthorized"
          }
        }
      },
      "get": {
        "tags": [
          "Salesman"
        ],
        "summary": "Get all salesmen",
        "operationId": "getAllSalesmen",
        "consumes": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Array containing all salesman objects from MongoDB"
          },
          "401": {
            "description": "unauthorized"
          },
          "404": {
            "description": "Database currently has no salesman"
          }
        }
      }
    },
    "/salesman/:sid": {
      "get": {
        "tags": [
          "Salesman"
        ],
        "summary": "Get one salesman by sid",
        "operationId": "getSalesmanById",
        "consumes": [
          "application/json"
        ],
        "parameters": [{
          "description": "ID of salesman that needs to be fetched",
          "in": "sid",
          "type": "integer"
        }],
        "responses": {
          "201": {
            "description": "successful"
          },
          "401": {
            "description": "unauthorized"
          }
        }
      },
      "put": {
        "tags": [
          "Salesman"
        ],
        "summary": "Update one salesman by sid",
        "operationId": "updateOneById",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Salesman object that needs to be updated",
            "schema": {
              "$ref": "#/definitions/Salesman"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful"
          },
          "401": {
            "description": "unauthorized"
          }
        }
      },
      "delete": {
        "tags": [
          "Salesman"
        ],
        "summary": "Delete one salesman by sid",
        "operationId": "deleteSalemanById",
        "consumes": [
          "application/json"
        ],
        "parameters": [{
          "description": "ID of salesman to delete",
          "in": "sid",
          "type": "integer"
        }],
        "responses": {
          "201": {
            "description": "successful"
          },
          "401": {
            "description": "unauthorized"
          }
        }
      }
    },
    "/performance-record": {
      "post": {
        "tags": [
          "Performance Record"
        ],
        "summary": "Creates one performanceRecord",
        "operationId": "createRecord",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "performanceRecord object that needs to be added",
            "schema": {
              "$ref": "#/definitions/Performance-Record"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful"
          },
          "401": {
            "description": "unauthorized"
          }
        }
      },
      "get": {
        "tags": [
          "Performance Record"
        ],
        "summary": "Get all performanceRecords",
        "operationId": "findAll",
        "consumes": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "201": {
            "description": "successful"
          },
          "401": {
            "description": "unauthorized"
          }
        }
      }
    },
    "/performance-record/:sid:year": {
      "get": {
        "tags": [
          "Performance Record"
        ],
        "summary": "Get one performanceRecord by SalesmanId and Year",
        "operationId": "findBySidandYear",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Id and Year of salesOrder object that needs to be fetched",
            "schema": {
              "$ref": "#/definitions/id_year"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful"
          },
          "401": {
            "description": "unauthorized"
          }
        }
      }
    },
      "/performance-record/:_id": {
        "put": {
          "tags": [
            "Performance Record"
          ],
          "summary": "Update one performanceRecord by PerformanceRecordId",
          "operationId": "update",
          "consumes": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "description": "performanceRecord object that needs to be updated",
              "schema": {
                "$ref": "#/definitions/Performance-Record"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "successful"
            },
            "401": {
              "description": "unauthorized"
            }
          }
        },
        "delete": {
          "tags": [
            "Performance Record"
          ],
          "summary": "Delete one performanceRecord by PerformanceRecordId",
          "operationId": "getAllRecords",
          "consumes": [
            "application/json"
          ],
          "parameters": [{
            "description": "ID of performanceRecord to delete",
            "in": "sid",
            "type": "integer"
          }],
          "responses": {
            "201": {
              "description": "successful"
            },
            "401": {
              "description": "unauthorized"
            }
          }
        }
      },
    "/bonus-computation": {
      "post": {
        "tags": [
          "Bonus Computation"
        ],
        "summary": "Creates bonus computation",
        "operationId": "create",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "bonus computation object thats need to be added",
            "schema": {
              "$ref": "#/definitions/bonus-computation"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful"
          },
          "401": {
            "description": "unauthorized"
          }
        }
      }
    },
    "/bonus-computation/:sid/:year": {
      "get": {
        "tags": [
          "Bonus Computation"
        ],
        "summary": "Get bonus computation by sid and year",
        "operationId": "findBySidAndYear",
        "consumes": [
          "application/json"
        ],
        "parameters": [{
          "name": "body",
          "description": "id and year of performanceRecord that needs to be fetched",
          "in": "body",
          "schema": {
            "$ref": "#/definitions/id_year"
          }
        }],
        "responses": {
          "201": {
            "description": "successful"
          },
          "401": {
            "description": "unauthorized"
          }
        }
      }
    },
    "/bonus-computation/:_id": {
      "put": {
        "tags": [
          "Bonus Computation"
        ],
        "summary": "Update one Bonus Computation by Id",
        "operationId": "update",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Bonus Computation object that needs to be updated",
            "schema": {
              "$ref": "#/definitions/bonus-computation"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful"
          },
          "401": {
            "description": "unauthorized"
          }
        }
      }
    },
    "/salesorder": {
      "post": {
        "tags": [
          "Salesorder"
        ],
        "summary": "Creates salesOrder",
        "operationId": "findBySidAndYear",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "salesOrder object that needs to be added",
            "schema": {
              "$ref": "#/definitions/Salesorder"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful"
          },
          "401": {
            "description": "unauthorized"
          }
        }
      }
    },
    "/salesorder/:sid/:year": {
      "get": {
        "tags": [
          "Salesorder"
        ],
        "summary": "Get salesOrder by sid and year",
        "operationId": "findBySidAndYear",
        "consumes": [
          "application/json"
        ],
        "parameters": [{
          "name": "body",
          "description": "id and year of salesOrder that needs to be fetched",
          "in": "body",
          "schema": {
            "$ref": "#/definitions/id_year"
          }
        }],
        "responses": {
          "201": {
            "description": "successful"
          },
          "401": {
            "description": "unauthorized"
          }
        }
      }
    },
    "/salesorder/:_id": {
      "put": {
        "tags": [
          "Salesorder"
        ],
        "summary": "Update one salesOrder by Id",
        "operationId": "update",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "salesOrder object that needs to be updated",
            "schema": {
              "$ref": "#/definitions/Salesorder"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful"
          },
          "401": {
            "description": "unauthorized"
          }
        }
      }
    },
    "/user": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get current user",
        "operationId": "getSelf",
        "consumes": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "201": {
            "description": "successful"
          },
          "401": {
            "description": "unauthorized"
          }
        }
      }
    },
    "/login": {
      "get": {
        "tags": [
          "login"
        ],
        "summary": "Get login status",
        "operationId": "isLoggedIn",
        "consumes": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "201": {
            "description": "successful"
          },
          "401": {
            "description": "unauthorized"
          }
        }
      },
      "post": {
        "tags": [
          "login"
        ],
        "summary": "Create a new login",
        "operationId": "login",
        "consumes": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "201": {
            "description": "successful"
          },
          "401": {
            "description": "unauthorized"
          }
        }
      },
      "delete": {
        "tags": [
          "login"
        ],
        "summary": "Logout of application",
        "operationId": "logout",
        "consumes": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "201": {
            "description": "successful"
          },
          "401": {
            "description": "unauthorized"
          }
        }
      }
    }
  },
  "definitions": {
    "Salesman": {
      "properties": {
        "id": {
          "type": "number",
          "format": "int64",
          "example": "1"
        },
        "employeeId":{
          "type": "number",
          "format": "int64",
          "example": "1234"
        },
        "firstname": {
          "type": "string",
          "example": "Max"
        },
        "lastname": {
          "type": "string",
          "example": "Musterman"
        },
        "dob": {
          "type": "string",
          "example": "1999"
        },
        "department": {
          "type": "string",
          "example": "Sales"
        }
        }
      },
    "Performance-Record": {
      "properties": {
        "actualValue": {
          "type": "number",
          "format": "int64",
          "example": "101"
        },
        "targetValue":{
          "type": "number",
          "format": "int64",
          "example": "100"
        },
        "year": {
          "type": "number",
          "format": "int64",
          "example": "2000"
        },
        "goalDesc": {
          "type": "string",
          "example": "Test Desc"
        },
        "sid": {
          "type": "number",
          "format": "int64",
          "example": "01"
        }
      }
    },
    "Salesorder": {
      "properties": {
        "sid": {
          "type": "number",
          "format": "int64",
          "example": "01"
        },
        "year":{
          "type": "number",
          "format": "int64",
          "example": 2000
        },
        "product": {
          "type": "string",
          "example": "Hoover"
        },
        "customerName": {
          "type": "string",
          "example": "Telekom"
        },
        "clientRanking": {
          "type": "number",
          "format": "int64",
          "example": "15"
        },
        "items": {
          "type": "number",
          "format": "int64",
          "example": "32"
        },
        "bonus": {
          "type": "number",
          "format": "int64",
          "example": "150"
        }
      }
    },
    "bonus-computation": {
      "properties": {
        "sid": {
          "type": "number",
          "format": "int64",
          "example": "1"
        },
        "year":{
          "type": "number",
          "format": "int64",
          "example": "2000"
        },
        "value": {
          "type": "number",
          "format": "int64",
          "example": "Max"
        },
        "performanceRecords": {
          "type": "array",
          "example": "Musterman"
        },
        "salesOrders": {
          "type": "array",
          "example": "1999"
        },
        "remarks": {
          "type": "string",
          "example": "Well done!"
        }
      }
    },
    "id_year":{
      "properties": {
        "sid": {
          "type": "number",
          "description": "sid of salesman",
          "example": 1
        },
        "year": {
          "type": "number",
          "description": "year",
          "example": 2000
        }
      }
    }
    }
  }
